name: Test Execution & Publish Report
on:
  schedule:
  - cron: "0 2 * * 1-5"
  
  workflow_dispatch:
    inputs:
      test_name:
        description: Test File / Test Class / Test function Name
        required: false
        type: string

      test_group:
        description: Test Group (e.g., smoke / "smoke or regression" / "not smoke")
        required: false
        type: string

      APP_MAX_REQUESTS:
        description: Max number of Requests to the app / minute
        type: number
        required: false

      parallel:
        type: boolean
        description: Run Tests in Parallel
        default: false

      publish_report:
        description: Publish Allure Report, Javadoc and Azure Devops Test Results
        type: boolean
        default: true

env: 
  APP_MAX_REQUESTS: ${{inputs.APP_MAX_REQUESTS}}
  
permissions:
  id-token: write
  contents: read
  pages: write
  
jobs:
  test-execution:
    runs-on: ubuntu-latest
    container:
      image: python:3.13

    steps:
      - name: Checkout the Repository to Runner
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: pip install -r requirements.txt --upgrade

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Checkout Book API. Node.js App Repository
        uses: actions/checkout@v4
        with:
          repository: NayeemJohnY/book-nodejs-app  
          path: books-nodejs-app

      - name: Install dependencies
        run: 
          npm install --prefix books-nodejs-app

      - name: Start Book NodeJS App
        run: |
          npm run start-pm2 --prefix books-nodejs-app
          sleep 20

      - name: Execute Test
        shell: bash
        run: |
          EXTRA_PARAMS=""
      
          if ${{ inputs.parallel }} ; then
            EXTRA_PARAMS+=" -n auto --dist loadfile";
          fi

          if [ "${{ inputs.test_name }}" != "" ]; then
            EXTRA_PARAMS+=' -k ${{ inputs.test_name }}';
          fi

          if [ "${{ inputs.test_group }}" != "" ]; then
            EXTRA_PARAMS+=' -m ${{ inputs.test_group }}';
          fi

          echo "Running with: pytest ${EXTRA_PARAMS}"
          pytest ${EXTRA_PARAMS}

      - name: Stop Book NodeJS App
        if: always()
        run: npm run stop-pm2 --prefix books-nodejs-app

      - name: Generate Allure Report
        if: success() || failure()
        uses: NayeemJohnY/actions/allure-report-with-history@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Test Results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
          retention-days: 3

      - name: Post Test Results to Azure DevOps
        if: ${{ (success() || failure()) && inputs.publish_report }}
        uses: NayeemJohnY/actions/post-test-results-to-azure-devops@main
        with:
          test-results-json: test-results/test-results-report.json
          org-url: ${{ vars.AZURE_ORG_URL }}
          project: ${{ vars.AZURE_PROJECT }}
          azure-token: ${{ secrets.AZURE_TOKEN }}

      - name: Prepare GitHub Pages Content
        if: ${{ (success() || failure()) && inputs.publish_report }}
        uses: NayeemJohnY/actions/prepare-github-pages@main
        with:
         allure-report-dir: test-results/allure-report
         test-results-json: test-results/test-results-report.json
    
      - name: Deploy GitHub Pages
        if: ${{ (success() || failure()) && inputs.publish_report }}
        uses: NayeemJohnY/actions/deploy-github-pages-site@main
